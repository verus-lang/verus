name: ci

on:
  push:
    branches:
      - 'main'

  workflow_dispatch:

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup rust
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: setup verusfmt
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/verus-lang/verusfmt/releases/latest/download/verusfmt-installer.sh | sh
      - name: check rustfmt/verusfmt
        working-directory: ./source
        run: |
          . ../tools/activate
          vargo fmt -- --check
      - name: check cargo fmt for vargo
        working-directory: ./tools/vargo
        run: |
          cargo fmt -- --check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ['', 'singular', 'record-history', 'no-std', 'no-alloc']
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: get z3
        working-directory: ./source
        run: |
          ../.github/workflows/get-z3.sh
          echo z3 version `./z3 --version`
      - name: setup rust
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: setup singular
        if: matrix.features == 'singular'
        run: |
          sudo apt-get update
          sudo apt-get install -y singular
      - name: build and test
        working-directory: ./source
        run: |
          . ../tools/activate
          vargo clean

          case "${{ matrix.features }}" in
            "singular")
              vargo build --features singular
              VERUS_Z3_PATH="$(pwd)/z3" VERUS_SINGULAR_PATH="/usr/bin/Singular" vargo test -p air --features singular
              VERUS_Z3_PATH="$(pwd)/z3" VERUS_SINGULAR_PATH="/usr/bin/Singular" vargo test -p rust_verify_test --features singular --test integer_ring
              VERUS_Z3_PATH="$(pwd)/z3" VERUS_SINGULAR_PATH="/usr/bin/Singular" vargo test -p rust_verify_test --features singular --test examples -- example_integer_ring
              ;;
            "record-history")
              vargo build --features record-history
              VERUS_Z3_PATH="$(pwd)/z3" vargo test -p rust_verify_test --features record-history --test basic
              ;;
            "no-std")
              vargo build --vstd-no-std
              cd vstd
              unset -f cargo
              cargo build --no-default-features --features alloc
              ;;
            "no-alloc")
              vargo build --vstd-no-std --vstd-no-alloc
              cd vstd
              unset -f cargo
              cargo build --no-default-features
              ;;
            *)
              VERUS_Z3_PATH="$(pwd)/z3" vargo test -p air
              VERUS_Z3_PATH="$(pwd)/z3" vargo test -p rust_verify_test
              cd vstd
              unset -f cargo
              cargo build
              ;;
          esac
      - name: build docs
        if: matrix.features == ''
        working-directory: ./source
        run: |
          ./tools/docs.sh
      - name: upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.features == ''
        with:
          name: verusdoc
          path: source/doc

  smoke-test-windows:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: get z3
        shell: pwsh
        working-directory: .\source
        run: |
          .\tools\get-z3.ps1
          Write-Host "z3 version $(.\z3.exe --version)"
      - name: setup rust
        run: |
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=none
          del rustup-init.exe
        shell: powershell
      - name: cargo test
        working-directory: .\source
        run: |
          ../tools/activate.ps1
          vargo clean
          vargo build
          $env:VERUS_Z3_PATH = "$(Get-Location)/z3"; vargo test -p rust_verify_test --test basic
          $env:VERUS_Z3_PATH = "$(Get-Location)/z3"; vargo test -p rust_verify_test --test layout
        shell: powershell
